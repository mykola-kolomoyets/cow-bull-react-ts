{"version":3,"sources":["utils/index.ts","context/warning/warningContext.tsx","store/hooks.ts","store/game/gameState.ts","store/game/gameSlice.ts","components/RestartGame/index.ts","components/RestartGame/RestartGame.tsx","components/Input/index.ts","components/Input/Input.tsx","components/Moves/index.ts","components/Moves/Moves.tsx","components/CowBulls/index.ts","components/CowBulls/CowBulls.tsx","components/History/HistoryItem.tsx","components/History/index.ts","components/History/History.tsx","components/Header/index.ts","components/Header/Header.tsx","components/Warning/WarningsContainer.tsx","App.tsx","store/warning/reducer.ts","store/warning/index.ts","store/warning/state.tsx","store/store.ts","index.tsx"],"names":["warningTypes","WarningContext","createContext","useAppDispatch","useDispatch","useAppSelector","useSelector","gameInitialState","moves","currentNumber","enteredNumber","gameData","cows","bulls","incorrectNumbers","hints","history","gameSlice","createSlice","name","initialState","reducers","incrementMoves","state","setEnteredNumber","action","payload","setGameData","setIncorrectNumbers","setCurrentNumber","addToHistory","push","clearHistory","setHints","clearHints","annulateState","actions","numberGenerator","SHOW_ALERT","HIDE_ALERT","numbers","i","index","Math","floor","random","length","result","splice","multiplier","generateNumber","number","generator","next","value","StartNewGame","dispatch","compareNumbers","num1","toString","test","getCowsBulls","num2","num1Arr","split","num2Arr","includes","RestartGame","warning","useContext","className","onClick","show","success","Input","useState","setValue","game","handleSubmit","event","a","preventDefault","hide","currentTarget","nodeValue","criterions","console","log","Promise","resolve","then","setTimeout","currHistoryItem","data","warnings","onSubmit","type","onChange","target","handleChange","placeholder","maxLength","Moves","props","CowBulls","HistoryItem","History","historyElements","map","Header","WarningsContainer","text","visible","role","xmlns","viewBox","d","App","useEffect","handlers","warningReducer","DEFAULT","WarningState","useReducer","Provider","children","store","configureStore","reducer","gameReducer","middleware","logger","ReactDOM","document","getElementById"],"mappings":"iJAYKA,E,6CCPUC,EAFQC,wBAAc,I,OCCxBC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,OCUhDC,EAb0B,CACrCC,MAAO,EACPC,cAAe,EACfC,cAAe,EACfC,SAAU,CACNC,KAAM,EACNC,MAAO,GAEXC,iBAAkB,GAClBC,MAAO,GACPC,QAAS,ICTPC,EAAYC,YAAY,CAC7BC,KAAM,OACNC,aAAcb,EACdc,SAAU,CACTC,eAAgB,SAAAC,GACfA,EAAMf,OAAS,GAEhBgB,iBAAkB,SAACD,EAAOE,GACzBF,EAAMb,eAAiBe,EAAOC,SAE/BC,YAAa,SAACJ,EAAOE,GACpBF,EAAMZ,SAAWc,EAAOC,SAEzBE,oBAAqB,SAACL,EAAOE,GAC5BF,EAAMT,iBAAmBW,EAAOC,SAEjCG,iBAAkB,SAACN,EAAOE,GACzBF,EAAMd,cAAgBgB,EAAOC,SAE9BI,aAAc,SAACP,EAAOE,GACrBF,EAAMP,QAAQe,KAAKN,EAAOC,UAE3BM,aAAc,SAAAT,GACbA,EAAMP,QAAU,IAEjBiB,SAAU,SAACV,EAAOE,GACjBF,EAAMR,MAAQU,EAAOC,SAEtBQ,WAAY,SAAAX,GACXA,EAAMR,MAAQ,IAEfoB,cAAe,SAAAZ,GACdA,EAAMf,MAAQ,EACde,EAAMd,cAAgB,EACtBc,EAAMb,cAAgB,EACtBa,EAAMZ,SAAW,CAChBC,KAAM,EACNC,MAAO,GAERU,EAAMR,MAAQ,GACdQ,EAAMP,QAAU,GAChBO,EAAMT,iBAAmB,OAKrB,EAWHG,EAAUmB,QAVbd,EADM,EACNA,eACAQ,EAFM,EAENA,aAGAH,GALM,EAGNO,WAHM,EAINF,aAJM,EAKNL,aAEAC,GAPM,EAMNK,SANM,EAONL,qBACAJ,EARM,EAQNA,iBACAW,EATM,EASNA,cACAN,EAVM,EAUNA,iBAGcZ,IAAf,Q,WJ5CUoB,GATJC,EAAa,aACbC,EAAa,aAQnB,SAAUF,EAAgBG,GAA1B,6EACaC,EAAI,EADjB,YACoBA,GAAK,GADzB,iBAOQ,OAJW,KADPC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWL,EAAQM,UACzB,IAANL,GAAYC,IACxBK,EAASP,EAAQE,GACrBF,EAAQQ,OAAON,EAAO,GAClBO,EANZ,SAMyB,GAAOR,GANhC,SAOcM,EAASE,EAPvB,OAC4BR,IAD5B,wD,SANKzC,K,iBAAAA,E,gBAAAA,E,cAAAA,M,KAiBL,I,EAAMkD,EAAiB,WAQnB,IAPA,IAAMV,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCO,EAAmC,CACrCI,OAAQ,EACRrC,iBAAkB,IAGhBsC,EAAYf,EAAgBG,GACzBC,EAAI,EAAGA,EAAI,EAAGA,IACnBM,EAAOI,QAAUC,EAAUC,OAAOC,MAKtC,OAFAP,EAAOjC,iBAAmB0B,EAEnBO,GAKLQ,EAAe,WACjB,IAAMC,EAAWrD,IACjBqD,EAASrB,KACT,MAAmCe,IAA5BC,EAAP,EAAOA,OAAQrC,EAAf,EAAeA,iBACf0C,EAAS3B,EAAiBsB,IAC1BK,EAAS5B,EAAoBd,KAG3B2C,EAAiB,SAACC,GACpB,MAAO,CACwB,IAA3BA,EAAKC,WAAWb,QAZGK,EAaAO,GAb4B,eAAeE,KAAKT,EAAOQ,cAAxD,IAACR,GAiBrBU,EAAe,SAACH,EAAcI,GAShC,IARA,IAAIf,EAAuB,CACvBnC,KAAM,EACNC,MAAO,GAGLkD,EAAUL,EAAKC,WAAWK,MAAM,IAChCC,EAAUH,EAAKH,WAAWK,MAAM,IAE7BvB,EAAI,EAAGA,EAAI,EAAGA,IACfsB,EAAQtB,KAAOwB,EAAQxB,KAAIM,EAAOlC,OAAO,GACzCoD,EAAQC,SAASH,EAAQtB,MAAKM,EAAOnC,MAAM,GAGnD,OAAOmC,G,OK3EIoB,ECUK,WAClB,IAAMC,EAAUC,qBAAWpE,GACrBuD,EAAWrD,IAQjB,OACE,wBACEmE,UAAU,wGACVC,QAVgB,WAClBf,EAASrB,KACT,MAAqCe,IAA7BC,EAAR,EAAQA,OAAQrC,EAAhB,EAAgBA,iBAChB0C,EAAS3B,EAAiBsB,IAC1BK,EAAS5B,EAAoBd,IAC7BsD,EAAQI,KAAK,mBAAoBxE,EAAayE,UAG9C,0BCrBWC,ECoBO,WACpB,MAA0BC,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcsB,EAAd,KACMR,EAAUC,qBAAWpE,GAC3B,EAAyCI,GACvC,SAACkB,GAAD,OAAWA,EAAMsD,QADXpE,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,cAGjB8C,EAAWrD,IAOX2E,EAAY,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDACL,KAAV1B,EADe,oDAEnByB,EAAME,iBACNb,EAAQc,OACR1B,EAAShC,EAAiBuD,EAAMI,cAAcC,YAC9CR,EAAS,IAEHS,EAAa5B,EAAe/C,GAClC4E,QAAQC,IAAIF,IAERA,EAAW,KAAMA,EAAW,GAVb,oBAWjB7B,EAASlC,KACLZ,IAAkBD,EAZL,iBAaf+E,QAAQC,UACLC,MAAK,kBAAMtB,EAAQI,KAAK,aAAcxE,EAAayE,YACnDiB,MAAK,WACJC,YAAW,kBAAMpC,MAAgB,QAhBtB,+BAmBT5C,EAAWkD,EAAapD,EAAeC,GAEvCkF,EAAmC,CACvCzC,OAAQzC,EACRmF,KAAMlF,GAvBO,UAyBT6C,EAAS7B,EAAYhB,IAzBZ,yBA0BT6C,EAAS1B,EAAa8D,IA1Bb,gCA6BbE,EAAW,GACVT,EAAW,KAAIS,GAAY,uBAC3BT,EAAW,IAAOA,EAAW,KAAIS,GAAY,QAC7CT,EAAW,KAAIS,GAAY,8BAChC1B,EAAQI,KAAKsB,EAAU9F,EAAaoE,SAjCnB,4CAAH,sDAqClB,OACE,kCACE,sBACEE,UAAU,kBACV7C,OAAO,IACPsE,SAAU,SAAChB,GAAD,OAAWD,EAAaC,IAHpC,SAKE,sBAAKT,UAAU,kDAAf,UACE,uBACEA,UAAU,0HACV0B,KAAK,OACLC,SAAU,SAAClB,GAAD,OArDC,SAACA,GACpBH,EAASG,EAAMmB,OAAO5C,OACtBE,EAAShC,EAAiBuD,EAAMmB,OAAO5C,QAmDV6C,CAAapB,IAClCzB,MAAOA,EACP8C,YAAa,OACbC,UAAW,IAEb,wBACE/B,UAAU,6GACV0B,KAAK,SAFP,0BAMA,cAAC,EAAD,YC5FKM,ECEgB,SAACC,GAC/B,IAAO/F,EAAS+F,EAAT/F,MACP,OACC,qBAAK8D,UAAU,gCAAf,SACC,qBAAIA,UAAU,gCAAd,yBAA0D,sBAAMA,UAAU,WAAhB,SAA4B9D,IAAtF,UCNYgG,ECCsB,SAACD,GACrC,IAAO3F,EAAe2F,EAAf3F,KAAMC,EAAS0F,EAAT1F,MAEb,OACC,0BAASyD,UAAU,oBAAnB,UACC,oBAAGA,UAAU,4BAAb,mBAAgD1D,KAChD,oBAAG0D,UAAU,6BAAb,oBAAkDzD,SCStC4F,EAf0B,SAACF,GACzC,IAAOpD,EAAgBoD,EAAhBpD,OAAQ0C,EAAQU,EAARV,KACf,OACC,qBACEvB,UAAU,wDADZ,UAEE,iCAASnB,IACT,sBAAKmB,UAAU,OAAf,UACC,uCAAUuB,EAAKjF,KAAf,WACA,wCAAWiF,EAAKhF,cALnB,UAAYsC,EAAZ,YAAsB0C,EAAKjF,KAA3B,YAAmCiF,EAAKhF,SCJ3B6F,ECGC,WACf,IAIMC,EAFFtG,GAAe,SAAAkB,GAAK,OAAIA,EAAMsD,QADjC7D,QAG+B4F,KAAI,YAAsC,IAApCzD,EAAmC,EAAnCA,OAAQ0C,EAA2B,EAA3BA,KAC7C,OAAO,cAAC,EAAD,CAAa1C,OAAQA,EAAQ0C,KAAMA,OAI3C,OACC,0BAASvB,UAAU,gDAAnB,UACC,oBAAIA,UAAU,yCAAd,qBACA,oBAAIA,UAAU,GAAd,SACEqC,EAAgB7D,OAAS6D,EAC1B,sBAAMrC,UAAU,UAAhB,mDClBWuC,ECAA,WACd,OACC,oBAAIvC,UAAU,sCAAd,4BC8BawC,EA7BmB,WAEjC,MAAwBzC,qBAAWpE,GAA5BmE,EAAP,EAAOA,QAASc,EAAhB,EAAgBA,KACTc,EAAc5B,EAAd4B,KAAMe,EAAQ3C,EAAR2C,KACb,OAAK3C,EAAQ4C,QAKZ,sBACA1C,UAAS,aAAQ0B,EAAR,kCAAsCA,EAAtC,qBAAuDA,EAAvD,6BACTiB,KAAK,QAFL,UAGC,mBAAG3C,UAAU,YAAb,uBAHD,OAIEyC,EACD,wBACAxC,QAASW,EACTZ,UAAU,QACV,aAAW,QAHX,SAIC,sBACC,cAAY,OACZA,UAAU,4CAFX,SAIC,sBAAKA,UAAS,oCAA+B0B,EAA/B,QAA2CiB,KAAK,SAASC,MAAM,6BAA6BC,QAAQ,YAAlH,UAA8H,0CAAoB,sBAAMC,EAAE,mPAjBtJ,MC2CMC,EAtCH,WACV,MAQIhH,GAAe,SAAAkB,GAAK,OAAIA,KAP1BsD,KACErE,EAFJ,EAEIA,MAFJ,IAGIG,SACEC,EAJN,EAIMA,KACAC,EALN,EAKMA,MAIA2C,EAAWrD,IAYjB,OAVAmH,qBAAU,WACR,MAGIpE,IAFFC,EADF,EACEA,OACArC,EAFF,EAEEA,iBAGF0C,EAAS3B,EAAiBsB,IAC1BK,EAAS5B,EAAoBd,MAC5B,IAGD,qBAAKwD,UAAU,4GAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAO9D,MAAOA,IACd,cAAC,EAAD,IAEA,cAAC,EAAD,CAAUI,KAAMA,EAAMC,MAAOA,IAC7B,cAAC,EAAD,U,cCxCF0G,GAAoB,mBACrBjF,GAAa,SAACf,EAAD,OAAeG,EAAf,EAAeA,QAAf,mBAAC,eAAuCA,GAAxC,IAAiDsF,SAAS,OADlD,cAErBzE,GAAa,SAAChB,GAAD,mBAAC,eAAqBA,GAAtB,IAA6ByF,SAAS,OAF9B,yBAGb,SAACzF,GAAD,OAAgBA,KAHH,GAWXiG,EALQ,SAACjG,EAAYE,GAEhC,OADe8F,EAAS9F,EAAOuE,OAASuB,EAASE,SACnClG,EAAOE,ICZViG,ECI8B,SAACnB,GAC7C,MAA0BoB,qBAAWH,EAAgB,CAACR,SAAS,IAA/D,mBAAOzF,EAAP,KAAciC,EAAd,KAWA,OAEC,aADA,CACC,EAAeoE,SAAhB,CACCtE,MAAO,CACNkB,KAbU,SAACuC,GAAkE,IAApDf,EAAmD,uDAA5C,UAClCxC,EAAS,CACRwC,KAAM1D,EACNZ,QAAS,CAACqF,OAAMf,WAWfd,KAPU,kBAAY1B,EAAS,CAACwC,KAAMzD,KAQtC6B,QAAS7C,GAJX,SAOEgF,EAAMsB,Y,iBCvBGC,EAAQC,YAAe,CAClCC,QAAS,CACPnD,KAAMoD,GAERC,WAAY,CAACC,O,MCAfC,SACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,UACA,cAAC,EAAD,QAIFO,SAASC,eAAe,W","file":"static/js/main.3cfad316.chunk.js","sourcesContent":["import { gameDataType } from 'types';\r\nimport { useAppDispatch } from 'store/hooks';\r\nimport { generateNumberReturnType } from \"types\";\r\nimport { \r\n    annulateState, \r\n    setCurrentNumber,\r\n    setIncorrectNumbers\r\n} from 'store/game/gameSlice';\r\n\r\nconst SHOW_ALERT = \"SHOW_ALERT\";\r\nconst HIDE_ALERT = \"HIDE_ALERT\";\r\n\r\nenum warningTypes {\r\n    warning = \"yellow\",\r\n    success = \"green\",\r\n    danger = \"red\"\r\n}\r\n\r\nfunction* numberGenerator(numbers: number[]): IterableIterator<number> {\r\n    for (let i = 0; i <= 4; i++) {\r\n        let index = Math.floor(Math.random() * numbers.length);\r\n        (index === 0 && i === 0) && index++;\r\n        let result = numbers[index];\r\n        numbers.splice(index, 1);\r\n        let multiplier = 10 ** (i)\r\n        yield result * multiplier;\r\n    }\r\n}\r\n\r\nconst generateNumber = (): generateNumberReturnType => {\r\n    const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n    const result: generateNumberReturnType = {\r\n        number: 0,\r\n        incorrectNumbers: []\r\n    };\r\n\r\n    const generator = numberGenerator(numbers);\r\n    for (let i = 0; i < 4; i++) {\r\n        result.number += generator.next().value;\r\n    }\r\n\r\n    result.incorrectNumbers = numbers;\r\n\r\n    return result;\r\n}\r\n\r\nconst hasRepeatedDigits = (number: number): boolean => /([0-9]).*?\\1/.test(number.toString());\r\n\r\nconst StartNewGame = () => {\r\n    const dispatch = useAppDispatch();\r\n    dispatch(annulateState());\r\n    const {number, incorrectNumbers} = generateNumber();\r\n    dispatch(setCurrentNumber(number));\r\n    dispatch(setIncorrectNumbers(incorrectNumbers));\r\n}\r\n\r\nconst compareNumbers = (num1: number): boolean[] => {\r\n    return [\r\n        num1.toString().length === 4,\r\n        !hasRepeatedDigits(num1)\r\n    ];\r\n}\r\n\r\nconst getCowsBulls = (num1: number, num2: number): gameDataType => {\r\n    let result: gameDataType = {\r\n        cows: 0,\r\n        bulls: 0\r\n    }\r\n\r\n    const num1Arr = num1.toString().split('');\r\n    const num2Arr = num2.toString().split('');\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n        if (num1Arr[i] === num2Arr[i]) result.bulls+=1;\r\n        if (num2Arr.includes(num1Arr[i])) result.cows+=1;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\n\r\nexport {\r\n    SHOW_ALERT,\r\n    HIDE_ALERT,\r\n    generateNumber,\r\n    compareNumbers,\r\n    StartNewGame,\r\n    getCowsBulls,\r\n    warningTypes\r\n}","import { createContext } from 'react';\r\nimport { IWarningContext } from 'types';\r\n\r\nconst WarningContext = createContext({} as IWarningContext);\r\n\r\nexport default WarningContext;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { gameStateType } from 'types';\r\n\r\nconst gameInitialState: gameStateType  = {\r\n    moves: 0,\r\n    currentNumber: 0,\r\n    enteredNumber: 0,\r\n    gameData: {\r\n        cows: 0,\r\n        bulls: 0\r\n    },\r\n    incorrectNumbers: [],\r\n    hints: [],\r\n    history: []\r\n}\r\n\r\nexport default gameInitialState;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport gameInitialState from \"./gameState\";\r\n\r\nconst gameSlice = createSlice({\r\n\tname: \"game\",\r\n\tinitialState: gameInitialState,\r\n\treducers: {\r\n\t\tincrementMoves: state => {\r\n\t\t\tstate.moves += 1;\r\n\t\t},\r\n\t\tsetEnteredNumber: (state, action) => {\r\n\t\t\tstate.enteredNumber = +action.payload;\r\n\t\t},\r\n\t\tsetGameData: (state, action) => {\r\n\t\t\tstate.gameData = action.payload;\r\n\t\t},\r\n\t\tsetIncorrectNumbers: (state, action) => {\r\n\t\t\tstate.incorrectNumbers = action.payload;\r\n\t\t},\r\n\t\tsetCurrentNumber: (state, action) => {\r\n\t\t\tstate.currentNumber = action.payload;\r\n\t\t},\r\n\t\taddToHistory: (state, action) => {\r\n\t\t\tstate.history.push(action.payload);\r\n\t\t},\r\n\t\tclearHistory: state => {\r\n\t\t\tstate.history = [];\r\n\t\t},\r\n\t\tsetHints: (state, action) => {\r\n\t\t\tstate.hints = action.payload;\r\n\t\t},\r\n\t\tclearHints: state => {\r\n\t\t\tstate.hints = [];\r\n\t\t},\r\n\t\tannulateState: state => {\r\n\t\t\tstate.moves = 0;\r\n\t\t\tstate.currentNumber = 0;\r\n\t\t\tstate.enteredNumber = 0;\r\n\t\t\tstate.gameData = {\r\n\t\t\t\tcows: 0,\r\n\t\t\t\tbulls: 0\r\n\t\t\t};\r\n\t\t\tstate.hints = [];\r\n\t\t\tstate.history = [];\r\n\t\t\tstate.incorrectNumbers = [];\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const {\r\n\tincrementMoves,\r\n\taddToHistory,\r\n\tclearHints,\r\n\tclearHistory,\r\n\tsetGameData,\r\n\tsetHints,\r\n\tsetIncorrectNumbers,\r\n\tsetEnteredNumber,\r\n\tannulateState,\r\n\tsetCurrentNumber\r\n} = gameSlice.actions;\r\n\r\nexport default gameSlice.reducer;","import RestartGame from \"./RestartGame\";\r\n\r\nexport default RestartGame; ","import React, { useContext } from \"react\";\r\nimport { generateNumber, warningTypes } from \"utils\";\r\nimport {\r\n  annulateState,\r\n  setCurrentNumber,\r\n  setIncorrectNumbers,\r\n} from \"store/game/gameSlice\";\r\n\r\nimport { WarningContext } from \"context\";\r\n\r\nimport { useAppDispatch } from \"store/hooks\";\r\n\r\nconst RestartGame = () => {\r\n  const warning = useContext(WarningContext);\r\n  const dispatch = useAppDispatch();\r\n  const handleClick = () => {\r\n    dispatch(annulateState());\r\n    const { number, incorrectNumbers } = generateNumber();\r\n    dispatch(setCurrentNumber(number));\r\n    dispatch(setIncorrectNumbers(incorrectNumbers));\r\n    warning.show(\"New game started\", warningTypes.success);\r\n  };\r\n  return (\r\n    <button\r\n      className=\"flex-shrink-0 border-transparent border-4 text-blue-500 hover:text-blue-900 text-lg py-1 px-3 rounded\"\r\n      onClick={handleClick}\r\n    >\r\n      RestartGame\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RestartGame;\r\n","import Input from \"./Input\";\r\n\r\nexport default Input;","import React, { FC, useState, useContext} from \"react\";\r\nimport { WarningContext } from \"context\";\r\nimport {\r\n  compareNumbers,\r\n  StartNewGame,\r\n  getCowsBulls,\r\n  warningTypes,\r\n} from \"utils\";\r\n// import { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  incrementMoves,\r\n  setEnteredNumber,\r\n  setGameData,\r\n  addToHistory,\r\n} from \"store/game/gameSlice\";\r\n\r\nimport RestartGame from 'components/RestartGame';\r\n\r\nimport { historyItemType } from \"types\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"store/hooks\";\r\n\r\nconst Input: FC<{}> = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const warning = useContext(WarningContext);\r\n  const { currentNumber, enteredNumber } = useAppSelector(\r\n    (state) => state.game\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(event.target.value);\r\n    dispatch(setEnteredNumber(event.target.value));\r\n  };\r\n\r\n  const handleSubmit = async (event: React.SyntheticEvent<HTMLFormElement>) => {\r\n    if (value === \"\") return;\r\n    event.preventDefault();\r\n    warning.hide();\r\n    dispatch(setEnteredNumber(event.currentTarget.nodeValue));\r\n    setValue(\"\");\r\n\r\n    const criterions = compareNumbers(enteredNumber);\r\n    console.log(criterions);\r\n\r\n    if (criterions[0] && criterions[1]) {\r\n      dispatch(incrementMoves());\r\n      if (enteredNumber === currentNumber) {\r\n        Promise.resolve()\r\n          .then(() => warning.show(\"WOU WIN!!!\", warningTypes.success))\r\n          .then(() => {\r\n            setTimeout(() => StartNewGame(), 2000);\r\n          });\r\n      } else {\r\n        const gameData = getCowsBulls(currentNumber, enteredNumber);\r\n\r\n        const currHistoryItem: historyItemType = {\r\n          number: enteredNumber,\r\n          data: gameData,\r\n        };\r\n        await dispatch(setGameData(gameData));\r\n        await dispatch(addToHistory(currHistoryItem));\r\n      }\r\n    } else {\r\n      let warnings = \"\";\r\n      if (!criterions[0]) warnings += \"non 4-digit number \";\r\n      if (!criterions[0] && !criterions[1]) warnings += \"and \";\r\n      if (!criterions[1]) warnings += \"number has repeated digits\";\r\n      warning.show(warnings, warningTypes.warning);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <form\r\n        className=\"w-full max-w-sm\"\r\n        action=\"#\"\r\n        onSubmit={(event) => handleSubmit(event)}\r\n      >\r\n        <div className=\"flex items-center border-b border-blue-500 py-2\">\r\n          <input\r\n            className=\"appearance-none bg-transparent border-none w-full text-xl text-blue-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\r\n            type=\"text\"\r\n            onChange={(event) => handleChange(event)}\r\n            value={value}\r\n            placeholder={\"####\"}\r\n            maxLength={4}\r\n          />\r\n          <button\r\n            className=\" flex-shrink-0 bg-blue-500 hover:bg-blue-700 px-2 py-2 text-white font-bold border border-blue-700 rounded\"\r\n            type=\"submit\"\r\n          >\r\n            Check number\r\n          </button>\r\n          <RestartGame/>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import Moves from \"./Moves\";\r\n\r\nexport default Moves;","import React, {FC} from 'react';\r\nimport { IMovesProps } from 'types';\r\n\r\n\r\nconst Moves: FC<IMovesProps> = (props: IMovesProps) => {\r\n\tconst {moves} = props;\r\n\treturn (\r\n\t\t<div className=\"w-full px-2 py-2 text-xl mb-3\">\r\n\t\t\t<h3 className=\"flex-items-center text-center\">Your moves: <span className=\"text-2xl\">{moves}</span>\t</h3>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Moves;","import CowBulls from \"./CowBulls\";\r\n\r\nexport default CowBulls;","import React, {FC} from 'react';\r\nimport { ICowBullsProps } from 'types';\r\n\r\nconst CowBulls: FC<ICowBullsProps> = (props: ICowBullsProps) => {\r\n\tconst {cows, bulls} = props;\r\n\r\n\treturn (\r\n\t\t<section className=\"w-36 flex mx-auto\">\r\n\t\t\t<p className=\"mx-auto text-md mx-3 my-2\">Cows: {cows}</p>\r\n\t\t\t<p className=\" mx-auto text-md mx-3 my-2\">Bulls: {bulls}</p>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default CowBulls;","import React, { FC } from 'react';\r\nimport { historyItemType } from 'types';\r\n\r\nconst HistoryItem: FC<historyItemType> = (props: historyItemType) => {\r\n\tconst {number, data} = props;\r\n\treturn (\r\n\t\t<li key={`${number}-${data.cows}-${data.bulls}`}\r\n\t\t\t\tclassName=\"flex-column px-2 py-1 mt-2 border-l-2 border-blue-300\">\r\n\t \t\t<strong>{number}</strong>\r\n\t\t\t <div className=\"flex\">\r\n\t\t\t\t\t<p>cows: {data.cows} &nbsp;</p>\r\n\t\t\t\t\t<p>bulls: {data.bulls}</p>\r\n\t\t\t </div>\r\n\t \t\t\r\n\t \t</li>\r\n\t)\r\n}\r\n\r\nexport default HistoryItem;","import History from \"./History\";\r\n\r\nexport default History;","import React from 'react'\r\nimport { historyItemType } from 'types';\r\nimport HistoryItem from './HistoryItem';\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\nconst History = () => {\r\n\tconst {\r\n\t\thistory\r\n\t} = useAppSelector(state => state.game); \r\n\r\n\tconst historyElements = history.map(({number, data}: historyItemType) => {\r\n\t\treturn <HistoryItem number={number} data={data}/>\r\n\t})\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<section className=\"mt-3 border border-blue-100 rounded px-3 py-3\">\r\n\t\t\t<h2 className=\"text-2xl border-b border-blue-100 pb-3\">History</h2>\r\n\t\t\t<ul className=\"\">\r\n\t\t\t\t{historyElements.length ? historyElements : \r\n\t\t\t\t<span className=\"text-sm\">You have nor entered the number</span> }\r\n\t\t\t</ul>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default History;","import Header from \"./Header\";\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<h1 className=\"text-4xl text-bold text-center mb-3\">\r\n\t\t\tCow-Bull Game\r\n\t\t</h1>\r\n\t)\r\n}\r\n\r\nexport default Header;\r\n","// === default\r\nimport React, { FC, useContext } from 'react';\r\nimport { WarningContext } from 'context';\r\nimport { warningTypes } from \"utils\";\r\n\r\nconst WarningsContainer: FC<{}> = () => {\r\n\r\n\tconst {warning, hide} = useContext(WarningContext);\r\n\tconst {type, text} = warning;\r\n\tif (!warning.visible) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div \r\n\t\tclassName={`bg-${type}-100 border-l-4 border-${type}-500 text-${type}-700 p-4 relative rounded`}\r\n\t\trole=\"alert\">\r\n\t\t\t<p className=\"font-bold\">WARNING!!</p>&nbsp;\r\n\t\t\t{text}\r\n\t\t\t<button \r\n\t\t\tonClick={hide} \r\n\t\t\tclassName=\"close\" \r\n\t\t\taria-label=\"Close\">\r\n\t\t\t\t<span \r\n\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\tclassName=\"absolute top-3 bottom-0 right-0 px-4 py-3\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<svg className={`fill-current h-6 w-6 text-${type}-500`} role=\"button\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><title>Close</title><path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"/></svg>\r\n\t\t\t\t</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WarningsContainer;\r\n","import React, { useEffect } from 'react';\r\nimport Input from 'components/Input';\r\nimport { generateNumber } from 'utils';\r\nimport Moves from 'components/Moves';\r\nimport RestartGame from 'components/RestartGame';\r\nimport CowBulls from 'components/CowBulls';\r\nimport History from 'components/History';\r\nimport Header from 'components/Header';\r\nimport WarningContainer from 'components/Warning/WarningsContainer';\r\nimport {\r\n  setCurrentNumber,\r\n  setIncorrectNumbers\r\n} from 'store/game/gameSlice';\r\nimport { useAppSelector ,useAppDispatch } from 'store/hooks';\r\n\r\nconst App = () => {\r\n  const {\r\n    game: {\r\n      moves,\r\n      gameData: {\r\n        cows,\r\n        bulls\r\n      }\r\n    }\r\n  } = useAppSelector(state => state);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const {\r\n      number, \r\n      incorrectNumbers\r\n    } = generateNumber();\r\n\r\n    dispatch(setCurrentNumber(number));\r\n    dispatch(setIncorrectNumbers(incorrectNumbers))\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sm:container sm:mx-auto my-auto mx-4-auto p-10 border-4 border-blue-500 box-border relative top-9 rounded\">\r\n      <div className=\"w-96 flex-column mx-auto\">\r\n        <Header />\r\n        <WarningContainer />\r\n        <Moves moves={moves}/>\r\n        <Input />\r\n        {/* <RestartGame /> */}\r\n        <CowBulls cows={cows} bulls={bulls} />\r\n        <History/>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { SHOW_ALERT, HIDE_ALERT } from 'utils';\r\nimport {\r\n     ActionType, \r\n     handleType\r\n    } from \"types\";\r\n\r\nconst handlers: handleType = {\r\n    [SHOW_ALERT]: (state: any, { payload }: any) => ({ ...payload, visible: true }),\r\n    [HIDE_ALERT]: (state: any) => ({ ...state, visible: false }),\r\n    DEFAULT: (state: any) => state\r\n}\r\n\r\nconst warningReducer = (state: any, action: ActionType) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT;\r\n    return handle(state, action);\r\n}\r\n\r\nexport default warningReducer;","import WarningState from \"./state\";\r\n\r\nexport default WarningState;","import React, {FC, useReducer} from 'react';\r\nimport {WarningContext} from 'context';\r\nimport warningReducer from './reducer';\r\nimport {SHOW_ALERT, HIDE_ALERT} from 'utils';\r\nimport {dispatchType, IWarningStateProps} from 'types';\r\n\r\nconst WarningState: FC<IWarningStateProps> = (props: IWarningStateProps) => {\r\n\tconst [state, dispatch] = useReducer(warningReducer, {visible: false});\r\n\t\r\n\tconst show = (text: string, type = 'warning', payload?: dispatchType): void => {\r\n\t\tdispatch({\r\n\t\t\ttype: SHOW_ALERT,\r\n\t\t\tpayload: {text, type},\r\n\t\t});\r\n\t};\r\n\t\r\n\tconst hide = (): void => dispatch({type: HIDE_ALERT});\r\n\t\r\n\treturn (\r\n\t\t//^ soon will be refactored for complex Warning provider to show warnings\r\n\t\t<WarningContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tshow,\r\n\t\t\t\thide,\r\n\t\t\t\twarning: state,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</WarningContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default WarningState;","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport gameReducer from 'store/game/gameSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameReducer,\r\n  },\r\n  middleware: [logger]\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport WarningState from 'store/warning';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from \"store/store\";\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <WarningState>\r\n    <App />\r\n  </WarningState>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}